import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PlusIcon } from "@radix-ui/react-icons";
import { iconSize } from "../../../../../../core/design-system/index.js";
import { useConnectedWallets } from "../../../../../hooks/wallets/useConnectedWallets.js";
import { Spacer } from "../../../../components/Spacer.js";
import { Container } from "../../../../components/basic.js";
import { Button } from "../../../../components/buttons.js";
import { Text } from "../../../../components/text.js";
import { WalletSelectorButton } from "../WalletSelectorButton.js";
export function WalletSwitcherDrawerContent(props) {
    const connectedWallets = useConnectedWallets();
    // if all wallets are connected and showAll wallets is disabled, hide the connect button
    const hideConnectButton = !props.showAllWallets &&
        props.wallets?.every((w) => connectedWallets.includes(w));
    return (_jsxs(Container, { children: [_jsx(Text, { size: "lg", color: "primaryText", children: "Pay with" }), _jsx(Spacer, { y: "lg" }), _jsx(Container, { flex: "column", gap: "xs", children: connectedWallets.map((w) => {
                    const address = w.getAccount()?.address;
                    return (_jsx(WalletSelectorButton, { walletId: w.id, client: props.client, address: address || "", onClick: () => {
                            props.onSelect(w);
                            props.onBack();
                        }, disableChevron: true, checked: address === props.selectedAddress }, w.id));
                }) }), _jsx(Spacer, { y: "xxl" }), !hideConnectButton && (_jsxs(Button, { variant: "accent", fullWidth: true, onClick: props.onConnect, gap: "xs", children: [_jsx(PlusIcon, { width: iconSize.sm, height: iconSize.sm }), "Connect Wallet"] }))] }));
}
//# sourceMappingURL=WalletSwitcherDrawerContent.js.map