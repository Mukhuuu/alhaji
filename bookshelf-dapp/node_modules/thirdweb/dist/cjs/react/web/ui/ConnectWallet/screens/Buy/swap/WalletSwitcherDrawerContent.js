"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WalletSwitcherDrawerContent = WalletSwitcherDrawerContent;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_icons_1 = require("@radix-ui/react-icons");
const index_js_1 = require("../../../../../../core/design-system/index.js");
const useConnectedWallets_js_1 = require("../../../../../hooks/wallets/useConnectedWallets.js");
const Spacer_js_1 = require("../../../../components/Spacer.js");
const basic_js_1 = require("../../../../components/basic.js");
const buttons_js_1 = require("../../../../components/buttons.js");
const text_js_1 = require("../../../../components/text.js");
const WalletSelectorButton_js_1 = require("../WalletSelectorButton.js");
function WalletSwitcherDrawerContent(props) {
    const connectedWallets = (0, useConnectedWallets_js_1.useConnectedWallets)();
    // if all wallets are connected and showAll wallets is disabled, hide the connect button
    const hideConnectButton = !props.showAllWallets &&
        props.wallets?.every((w) => connectedWallets.includes(w));
    return ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { children: [(0, jsx_runtime_1.jsx)(text_js_1.Text, { size: "lg", color: "primaryText", children: "Pay with" }), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "lg" }), (0, jsx_runtime_1.jsx)(basic_js_1.Container, { flex: "column", gap: "xs", children: connectedWallets.map((w) => {
                    const address = w.getAccount()?.address;
                    return ((0, jsx_runtime_1.jsx)(WalletSelectorButton_js_1.WalletSelectorButton, { walletId: w.id, client: props.client, address: address || "", onClick: () => {
                            props.onSelect(w);
                            props.onBack();
                        }, disableChevron: true, checked: address === props.selectedAddress }, w.id));
                }) }), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "xxl" }), !hideConnectButton && ((0, jsx_runtime_1.jsxs)(buttons_js_1.Button, { variant: "accent", fullWidth: true, onClick: props.onConnect, gap: "xs", children: [(0, jsx_runtime_1.jsx)(react_icons_1.PlusIcon, { width: index_js_1.iconSize.sm, height: index_js_1.iconSize.sm }), "Connect Wallet"] }))] }));
}
//# sourceMappingURL=WalletSwitcherDrawerContent.js.map